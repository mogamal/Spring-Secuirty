package com.spring.tutorial.springsecurity.security.provider;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.spring.tutorial.springsecurity.security.authentications.UsernamePasswordAuthentication;
import com.spring.tutorial.springsecurity.service.JpaUserDetailsService;

public class UsernamePasswordAuthenticationProvider implements AuthenticationProvider {

	@Autowired
	private JpaUserDetailsService userDetialsService;
	
	@Autowired
	private PasswordEncoder passwordEncoder;

	@Override
	public Authentication authenticate(Authentication authentication) throws AuthenticationException {
		String username = authentication.getName();
		String password = String.valueOf(authentication.getCredentials());
		
		UserDetails userDetails = userDetialsService.loadUserByUsername(username);
		if( this.passwordEncoder.matches(password, userDetails.getPassword()))
		{
			return new UsernamePasswordAuthentication(userDetails.getUsername(), userDetails.getPassword(), userDetails.getAuthorities());
		}
		throw new BadCredentialsException("Bad Credential")
	}

	@Override
	public boolean supports(Class<?> authentication) {
		return false;
	}

}
